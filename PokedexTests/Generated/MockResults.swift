///
/// @Generated by Mockolo
///

import Alamofire
import CoreSpotlight
import Foundation
import MobileCoreServices
import Nuke
import SpriteKit
import UIKit
@testable import DataStore
@testable import Domain
@testable import Presentation

class PokemonListWireframeMock: PokemonListWireframe {
    init() { }
    init(viewController: UIViewController? = nil) {
        self.viewController = viewController
    }

    private(set) var viewControllerSetCallCount = 0
    var viewController: UIViewController? = nil { didSet { viewControllerSetCallCount += 1 } }

    private(set) var pushPokemonDetailCallCount = 0
    var pushPokemonDetailHandler: ((Int) -> Void)?
    func pushPokemonDetail(number: Int) {
        pushPokemonDetailCallCount += 1
        if let pushPokemonDetailHandler = pushPokemonDetailHandler {
            pushPokemonDetailHandler(number)
        }

    }
}

class PokemonListViewMock: PokemonListView {
    init() { }

    private(set) var showAlertCallCount = 0
    var showAlertHandler: ((String, String, [UIAlertAction]) -> Void)?
    func showAlert(_ title: String, message: String, actions: [UIAlertAction]) {
        showAlertCallCount += 1
        if let showAlertHandler = showAlertHandler {
            showAlertHandler(title, message, actions)
        }

    }

    private(set) var showErrorAlertCallCount = 0
    var showErrorAlertHandler: ((Error) -> Void)?
    func showErrorAlert(_ error: Error) {
        showErrorAlertCallCount += 1
        if let showErrorAlertHandler = showErrorAlertHandler {
            showErrorAlertHandler(error)
        }

    }

    private(set) var showPokemonListModelCallCount = 0
    var showPokemonListModelHandler: ((PokemonListModel) -> Void)?
    func showPokemonListModel(_ model: PokemonListModel) {
        showPokemonListModelCallCount += 1
        if let showPokemonListModelHandler = showPokemonListModelHandler {
            showPokemonListModelHandler(model)
        }

    }
}

class PokemonListTranslatorMock: PokemonListTranslator {
    init() { }

    private(set) var convertCallCount = 0
    var convertHandler: ((PokemonListResponse) -> (PokemonListModel))?
    func convert(from response: PokemonListResponse) -> PokemonListModel {
        convertCallCount += 1
        if let convertHandler = convertHandler {
            return convertHandler(response)
        }
        fatalError("convertHandler returns can't have a default value thus its handler must be set")
    }
}

class PokeAPIDataStoreMock: PokeAPIDataStore {
    init() { }

    private(set) var requestCallCount = 0
    var requestHandler: ((PokeAPIRequestable, Any) -> Void)?
    func request<T: Decodable>(_ request: PokeAPIRequestable, completion: @escaping (Result<T, Error>) -> Void) {
        requestCallCount += 1
        if let requestHandler = requestHandler {
            requestHandler(request, completion)
        }

    }
}

public class PokemonListRepositoryMock: PokemonListRepository {
    public init() { }

    public private(set) var getCallCount = 0
    public var getHandler: ((@escaping ((Result<PokemonListResponse, Error>) -> Void)) -> Void)?
    public func get(completion: @escaping ((Result<PokemonListResponse, Error>) -> Void)) {
        getCallCount += 1
        if let getHandler = getHandler {
            getHandler(completion)
        }

    }
}

public class PokemonListUseCaseMock: PokemonListUseCase {
    public init() { }

    public private(set) var getCallCount = 0
    public var getHandler: ((@escaping ((Result<PokemonListModel, Error>) -> Void)) -> Void)?
    public func get(completion: @escaping ((Result<PokemonListModel, Error>) -> Void)) {
        getCallCount += 1
        if let getHandler = getHandler {
            getHandler(completion)
        }

    }
}
